local Maps = {map0={},map1={},map3={},map4={}}
Maps.map0.walls = {{0,0, 400,0, 400,15, 0,15},
{0,230, 400,230, 400,240, 0,240},
{0,0, 5,0, 5,240, 0,240},
{395,0, 395,240, 400,240, 400,0}}

-- new better curve code
local function curve2(x1,y1,x2,y2,x3,y3,xc,yc,A,B,smooth)
    yc=math.floor(yc+.5)
    local c={x3,y3,x1,y1}
    local step=math.floor((x2-x1)/smooth +.5)
    local tpoint = math.floor(B*math.sqrt(1-A^-2*((x1+step)-xc)^2)+.5)
    local sign= (math.abs(y3-(yc+tpoint))<math.abs(y3-(yc-tpoint)) and 1 or -1)
        for i=1,smooth-1 do
            c[#c+1]=(x1+step*i)
            c[#c+1]=(sign*math.floor(B*math.sqrt(1-(A^-2*((x1+step*i)-xc)^2))+.5)+yc)
        end
    table.insert(c,x2)
    table.insert(c,y2)
    return c
end

Maps.map1.walls = {
-- main walls
{0,0, 400,0, 400,10, 0,10},
{0,235, 400,235, 400,240, 0,240},
{0,0, 45,0, 45,240, 0,240},
{355,0, 355,240, 400,240, 400,0},
-- 2 triangle at start
{112,10, 150,39, 171,10},
{123,93, 146,71, 167,93},
-- middle wall
{0,93, 234,93, 234,96, 0,96},
-- 2nd room curves
{223,93, 234,89, 234,93},
curve2(218,10,260,32,259,10,217.5,51.5,46.5,41.5,3),
curve2(263,61,256,74,263,74,217.5,51.5,46.5,41.5,2),
--hall between 2nd room and circle room
{260,32, 284,32, 284,30},
{263,61, 282,61, 282, 63},
-- circle room
curve2(284,32,318,11,284,11,317.5,48.5,37.5,37.5,2),
curve2(355,49,318,11,355,11,317.5,48.5,37.5,37.5,5),
curve2(355,49,318,86,355,86,317.5,48.5,37.5,37.5,5),
curve2(282,61,318,86,282,86,317.5,48.5,37.5,37.5,2),
{282,86, 355,86, 355,89},
-- hallway 1
{234,89, 271,126, 236,126},
{256,74, 294,105, 276, 74},
-- room 3
{294,104,312,102,294,102},
curve2(312,102,354,140,354,102,311.5,139.5,42.5,37.5,5),
curve2(312,177,354,140,354,177,311.5,139.5,42.5,37.5,5),
{296,175,312,177,296,177},
{271,126,269,130,269,126},
{270,147,268,130,269,147},
--hallway 2
{270,147, 235,163, 235,147},
{296,175, 267,195, 330,175},
--room 4
curve2(212,160,235,163,235,160,211.5,197.5,54.5,37.5,2),
curve2(212,160,163,179,163,160,211.5,197.5,54.5,37.5,3),
{266,197, 267,195, 266,195},
curve2(266,197,212,235,266,235,211.5,197.5,54.5,37.5,5),
curve2(160,211,212,235,160,235,211.5,197.5,54.5,37.5,3),
--hallway 3
{163,179, 130,174, 163,174},
{123,212, 160,211, 160,216},
--big circle room
curve2(123,212,90,229,123,229,90,188,41,41,3),
curve2(49,188,90,229,49,229,90,188,41,41,7),
curve2(49,188,72,151,49,151,90,188,41,41,4),
{130,174, 126,168, 130,168},
{98,147, 107,150, 107,147},
--bonus hall
{72,151, 70,144, 70,151},
{98,147, 98,140, 100,140},
--bonus circle room
curve2(70,144,51,121,51,144,80,121,29,24,4),
curve2(80,97,51,121,51,97,80,121,29,24,5),
curve2(80,97,109,121,109,97,80,121,29,24,5),
curve2(98,140,109,121,109,140,80,121,29,24,3),
--hallway 4
{126,166, 159,148, 159,166},
{107,150, 131,131, 125,131},
--carrot room
{130,127, 131,131, 130,131},
{159,148, 183,150, 159,150},
curve2(130,127,183,104,130,104,182.5,127,52.5,23,5),
curve2(235,127,183,104,235,104,182.5,127,52.5,23,4),
curve2(235,127,183,150,235,150,182.5,127,52.5,23,4),
}
Maps.map1.goal={196,124,6}
Maps.map1.horsePos={57,74, 79,31, 98,69, 57,46, 79,61, 98,20, 58,21, 99,40, 79,83, 102,85, 305,27, 329,27, 316,48, 305,69, 329,69}
Maps.map1.gatePos={0,113,4,1,1, 10,266,25,.5,.5}

Maps.map3.walls={
--spiky start area
{58,34, 46,3, 44,66},
{78,24, 74,2, 48,4},
{94,15, 143,10, 73,2},
{45,66, 65,62, 77,95},
{78,95, 102,71, 121,81, 117,86, 108,85, 99,86, 89,93, 84,101},
{115,60, 145,73, 137,79, 133,87, 133,95, 132,98, 125,89, 118,86},
{140,11, 126,26, 150,22, 171,21, 188,22, 206,25, 218,28, 223,2},
--first hall room bit
{167,72, 205,66, 211,100, 208,120, 182,80, 180,101, 176,100, 178,90, 175,81},
{134,96, 138,105, 146,111, 155,112, 164,111, 172,106, 176,100, 179,101, 177,122, 133,109, 134,102, 132,98},
{224,2, 252,28, 325,6},
{319,42, 325,7, 352,58},
{208,120, 211,101, 248,74, 248,88},
{248,88, 250,121, 254,126, 265,130, 285,133, 298,154, 276,143, 239,137, 239,94},
{345,62, 352,58, 360,57, 360,110, 349,110, 353,108, 356,101, 357,90, 355,80, 352,69},
-- yuri room
{276,68, 287,68, 282,72, 278,78, 278,86, 276,86},
{276,86, 278,86, 278,91, 283,98, 290,103, 300,105, 300,106, 276,106},
{300,106, 300,104, 303,104, 309,102, 315,98, 319,93, 322,85, 323,85, 323,106},
{312,67, 323,67, 323,84, 321,85, 322,79, 318,73},
-- main hall zone
{349,109, 345,112, 339,119, 335,130, 335,145, 339,155, 343,161},
{237,162, 259,170, 297,153, 276,144},
{330,175, 342,160, 353,201},
{321,208, 351,200, 323,231},
{283,183, 277,196, 264,194, 248,196, 246,192, 236,162, 260,170},
{228,230, 242,235, 260,236, 277,235, 295,229, 306,223, 323,232, 261,240, 230,235},
{158,239, 158,236, 178,235, 197,230, 205,226, 230,234},
{86,228, 102,215, 103,220, 112,227, 135,234, 158,237, 158,239},
{248,195, 236,198, 228,201, 223,203, 223,182, 246,192},
{223,192, 206,202, 205,174, 223,182},
{205,182, 191,198, 147,191, 147,185, 167,180, 167,190, 205,173},
--final 2 room
{136,110, 163,138, 129,141, 139,131, 108,131, 108,125, 117,124, 125,121, 132,113, 113,109},
{108,164, 112,165, 114,169, 113,174, 107,176, 103,174, 101,169, 103,165},
{85,101, 84,108, 87,112, 76,124, 53,107},
{85,228, 49,224, 82,212},
{48,224, 67,171, 45,152},
{45,152, 62,143, 53,108}
}
Maps.map3.goal={191,119,6}
Maps.map3.horsePos={77,34, 102,25, 124,40, 100,48, 80,56, 83,77, 60,51, 134,56, 146,84, 162,98}
Maps.map3.gatePos={0,144,16,1.2,.6, 10,266,25,.5,.5}

Maps.map4.walls={
--top rooms
{40,1, 40,8, 360,8, 360,1},
{137,8, 137,25, 270,25, 270,8},
{137,58, 137,67, 270,67, 270,58},
{50,91, 40,91, 40,1, 50,1},
{355,8, 360,8, 360,84, 355,84},
{40,86, 143,86, 143,91, 40,91},
{137,58, 137,91, 143,91, 143,58},
{269,57, 266,57, 266,84, 269,84},
--Right side rooms
{266,85, 266,163, 304,163, 304,85},
{336,85, 336,164, 360,164, 360,85},
{356,164, 360,164, 360,240, 356,240},
{266,164, 266,199, 270,199, 270,164},
{271,237, 271,240, 360,240, 360,237},
-- bottom plus carrot room
{133,226, 270,226, 270,240, 133,240},
{226,173, 226,199, 270,199, 270,173},
{133,199, 133,173, 198,173, 198,199},
{133,174, 133,89, 142,89, 142,174},
--left rooms
{133,238, 133,240, 40,240, 40,238},
{43,159, 40,159, 40,240, 43,240},
{106,141, 106,158, 132,158, 132,141},
{78,141, 40,141, 40,158, 78,158},
{40,141, 40,89, 48,89, 48,141}
}
Maps.map4.goal={183,120,6}
Maps.map4.horsePos={87,18, 87,68, 64,28, 64,60, 116,28, 116,58, 87,45}
Maps.map4.gatePos={0,136,15,1.3,.7}


--Less memory-intensive option as all local Maps variables no longer need to stay loaded
return function(mapname,HC)
    local m = {}
    assert(Maps[mapname],"map does not exist")
    if HC then
        for _,v in ipairs(Maps[mapname].walls) do
            HC.polygon(unpack(v))
        end
        m.goal=HC.circle(unpack(Maps[mapname].goal))
    else
        m.goal=Maps[mapname].goal
        m.bg=love.graphics.newImage("resources/maps/"..mapname..".png")
        m.gatePos=Maps[mapname].gatePos
    end
    m.horsePos=Maps[mapname].horsePos
    return m
end

--return Maps